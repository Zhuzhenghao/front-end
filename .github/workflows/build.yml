# In this example, lint-format is a job among many others in a bigger GitHub workflow.
# This job has 3 steps: Checking out the code, running the lint command, and running the formatting command.
name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
 # As its name stands for, this jobs will install the npm dependencies and cache them
  # unless they have been cached in a previous workflow run and remained unchanged.
  install-cache:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        # Check for `cache-hit` (`steps.cache-dependencies.cache-hit != 'true'`)
        # If there's a cache hit, we skip this step (the dependencies are already available)
        # If there's no cache hit, we run "yarn install"
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          yarn install --force --non-interactive

  lint-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18]
    needs: install-cache
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Restore yarn dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
        
      - name: Run lint
        run: |
          yarn lint

  build:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          node: [18]
      needs: [lint-check]
      steps:
        - name: Checkout Commit
          uses: actions/checkout@v3

        - name: Use Node.js ${{ matrix.node }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node }}

        - name: Restore yarn dependencies
          uses: actions/cache@v2
          id: cache-dependencies
          with:
            path: node_modules
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-
              
        - name: Run build
          run: |
            yarn build